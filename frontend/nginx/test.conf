server {
  listen 80;
  server_name test.hello.com;

  root /usr/share/nginx/html/dist;
  index index.html;

  location / {
    try_files $uri $uri/ @rewrites;
  }

  # 实现功能:url如果只是一个预览的链接,前端如果想实现下载功能的话,就可以使用nginx的反代,强制修改资源的Content-Type为可以下载的流文件
  location /obs/ {
    proxy_pass https://my.minio.com:443/; # ==> 将 http://test.hello.com/obs/ 的资源全部替换成 https://my.minio.com:443/ ,后缀自行添加
    proxy_pass_request_headers off;
    proxy_hide_header Content-Type;
    add_header Content-Type "application/octet-stream";
  }
  location @rewrites {
    rewrite ^(.+)$ /index.html last;
  }

  location ~* \.(?:htm|html)$ {
    add_header Cache-Control "private, no-store, no-cache, must-revalidate";
  }

  location ~* \.(?:ico|css|js|gif|jpe?g|png|svg|ttf|woff|eot|crx)$ {
    expires max;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  }

  access_log /data/log/nginx/hello.access.log;
  error_log /data/log/nginx/hello.error.log;
}
